#include <iostream>
#include "header_files/pro_header.h"

int main() {
    int res1 = my_box1();
    std::cout << "result1:" << res1 << std::endl;
    int res2 = my_box2();
    std::cout << "result2:" << res2 << std::endl;
    int res3 = my_line();
    std::cout << "result3:" << res3 << std::endl;
    int res4 = my_box3();
    std::cout << "result4:" << res4 << std::endl;
    int res5 = my_box4();
    std::cout << "result5:" << res5 << std::endl;
    int res6 = my_public_inherit();
    std::cout << "result6:" << res6 << std::endl;
    int res7 = my_protected_inherit();
    std::cout << "result7:" << res7 << std::endl;
    int res8 = my_private_inherit();
    std::cout << "result8:" << res8 << std::endl;
    int res9 = my_line2();
    std::cout << "result9:" << res9 << std::endl;
    int res10 = my_line3();
    std::cout << "result10:" << res10 << std::endl;
    int res11 = my_line4();
    std::cout << "result11:" << res11 << std::endl;
    int res12 = my_line5();
    std::cout << "result12:" << res12 << std::endl;
    int res13 = my_box5();
    std::cout << "result13:" << res13 << std::endl;
    int res14 = my_box6();
    std::cout << "result14:" << res14 << std::endl;
    int res15 = my_box7();
    std::cout << "result15:" << res15 << std::endl;
    int res16 = my_inherit1();
    std::cout << "result16:" << res16 << std::endl;
    int res17 = my_func_override();
    std::cout << "result17:" << res17 << std::endl;
    int res18 = my_box8();
    std::cout << "result18:" << res18 << std::endl;
    int res19 = my_polymorphism();
    std::cout << "result19:" << res19 << std::endl;
    int res20 = my_data_abstraction();
    std::cout << "result20:" << res20 << std::endl;
    int res21 = my_data_encapsulation();
    std::cout << "result21:" << res21 << std::endl;
    int res22 = my_data_abstract();
    std::cout << "result22:" << res22 << std::endl;
    // int res23 = my_file_stream1();
    // std::cout << "result23:" << res23 << std::endl;
    // int res24 = my_exception();
    // std::cout << "result24:" << res24 << std::endl;
    int res25 = self_define_exception();
    std::cout << "result25:" << res25 << std::endl;
    int res26 = my_new_delete_operator();
    std::cout << "result26:" << res26 << std::endl;
    int res27 = two_d_array_alloc();
    std::cout << "result27:" << res27 << std::endl;
    int res28 = three_d_array_malloc();
    std::cout << "result28:" << res28 << std::endl;
    int res29 = my_box10();
    std::cout << "result29:" << res29 << std::endl;
    int res30 = my_namespace1();
    std::cout << "result30:" << res30 << std::endl;
    int res31 = my_namespace2();
    std::cout << "result31:" << res31 << std::endl;
    int res32 = my_namespace3();
    std::cout << "result32:" << res32 << std::endl;
    int res33 = my_namespace4();
    std::cout << "result33:" << res33 << std::endl;
    int res34 = my_template1();
    std::cout << "result34:" << res34 << std::endl;
    int res35 = my_template2();
    std::cout << "result35:" << res35 << std::endl;
    int res36 = my_preprocessor1();
    std::cout << "result36:" << res36 << std::endl;
    int res37 = my_condition_compilation1();
    std::cout << "result37:" << res37 << std::endl;
    int res38 = my_preprocessor2();
    std::cout << "result38:" << res38 << std::endl;
    int res39 = my_macro1();
    std::cout << "result39:" << res39 << std::endl;
    // int res40 = my_signal1();
    // std::cout << "result40:" << res40 << std::endl;
    // int res41 = my_signal2();
    // std::cout << "result41:" << res41 << std::endl;
    // int res42 = my_multithreading();
    // std::cout << "result42:" << res42 << std::endl;
    int res43 = my_vector1();
    std::cout << "result43:" << res43 << std::endl;
    // std::cout << "Hello, World!" << std::endl;
    return 0;
}
